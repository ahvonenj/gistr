var exportDatabase=function(e){if(void 0===store.get("gists"))return console.log("No database to export");store.get("gists");if(e.f||e.tofile)consoleLog("Exporting local database to a file",e),fileExists(__dirname+"/.gistr_storage",function(e,o){if(e)throw e;o?fs.createReadStream(__dirname+"/.gistr_storage").pipe(fs.createWriteStream(process.cwd()+"/gistr-db-export.gs")).on("finish",function(){console.log("Database exported as a file to your cwd. Keep it safe somewhere."),console.log("NOTE: The database-file might include your Github access-token!")}):(console.log("Storage file not found"),process.exit(1))});else{consoleLog("Exporting local database as a gist",e),void 0===store.get("access-token")&&(console.log("Database can only be exported as a gist, if access-token in set"),process.exit(1));var o={_:[null,__dirname+"/.gistr_storage"],d:"gstr database export (WARNING: This gist contains your Github access-token!)"};createGist(o,!0,function(e){var o=e.id;console.log("Database saved as a gist to your Github profile"),console.log("To import database, save and use this gist ID or use the gisted file in your Github profile"),console.log("Gist ID: "+o)})}},importDatabase=function(e){yesno.ask("WARNING: This will overwrite the current database, continue?",null,function(o){if(o||process.exit(0),e.id)pullGistById(e.id,e,function(o){var t=o.files[Object.keys(o.files)[0]].raw_url;download(t).then(function(o){try{var t=JSON.parse(o.toString())}catch(e){console.log("Pulled gist does not seem to be a gister storage-file"),process.exit(1)}void 0===t.gists&&(console.log("Pulled gist does not seem to be a gister storage-file"),process.exit(1)),fs.writeFile(__dirname+"/.gistr_storage",o,function(o){o&&next(o),global.store=new Storage(__dirname+"/.gistr_storage"),consoleLog("Imported .gistr_storage from Github",e),process.exit(0)})})});else if(e.f||e.file){if("boolean"==typeof e.f||"boolean"==typeof e.file)t=process.cwd()+"/gistr-db-export.gs";else var t=e.f||e.file;fileExists(t,function(e,o){if(e)throw e;o?fs.readFile(t,function(e,o){if(e)throw e;try{var s=JSON.parse(o)}catch(e){console.log("Supplied file does not seem to be a gister storage-file or it does not contain anything"),process.exit(1)}void 0===s.gists&&(console.log("Supplied file does not seem to be a gister storage-file or it does not contain anything"),process.exit(1)),fs.createReadStream(t).pipe(fs.createWriteStream(__dirname+"/.gistr_storage")).on("finish",function(){global.store=new Storage(__dirname+"/.gistr_storage"),console.log("Database imported from file."),process.exit(0)})}):(console.log("Storage file not found"),process.exit(1))})}else console.log('Command needs to be called with --id="<gist id>" or --file="<pathToFile>"'),process.exit(1)})},clearDatabase=function(e){yesno.ask("WARNING: This will completely remove the local database, continue?",null,function(e){e||process.exit(0),void 0===store.get("gists")&&(console.log("No database to purge"),process.exit(1)),fileExists(__dirname+"/.gistr_storage",function(e,o){if(e)throw e;o?fs.unlink(__dirname+"/.gistr_storage",function(e){if(e)throw console.log("Could not purge database (filesystem error)"),e;global.store=new Storage(__dirname+"/.gistr_storage"),console.log("Database purged"),process.exit(0)}):(console.log("No database to purge"),process.exit(1))})})};exports.wrap=function(e){e.exportDatabase=exportDatabase,e.importDatabase=importDatabase,e.clearDatabase=clearDatabase};